# Set all targetâ€™s visibility in this package to "public".
package(default_visibility = ["//visibility:public"])

# Load rules_haskell rules.
load(
    "@rules_haskell//haskell:defs.bzl",
    "haskell_toolchain_library",
    "haskell_library",
    "haskell_binary",
)

shared_compiler_flags = [
    "-XNoImplicitPrelude",
    "-XOverloadedStrings",
];

# haskell_toolchain_library can access builtin GHC packages and assign them a
# bazel target name, so that they can be referenced as dependencies.
# haskell_toolchain_library(name = "base")

haskell_library(
    name = "example_lib",
    src_strip_prefix = "library",
    srcs = glob(['library/**/*.hs']),

    compiler_flags = shared_compiler_flags,
    deps = [
        "@snapshot//:rio",
    ],
)

haskell_binary(
    name = "example_main",
    srcs = [":executables/Main.hs"],

    compiler_flags = shared_compiler_flags,
    deps = [
        ":example_lib",
        "@snapshot//:rio",
    ],
)
